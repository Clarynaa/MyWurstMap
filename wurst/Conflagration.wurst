package Conflagration
import public ConflagrationObjects
import ClosureTimers
import ClosureForGroups
import HashMap
import ClosureEvents
import ErrorHandling

let buffId = BUFF_OBJ.abilId
let buffMap = new HashMap<unit, CallbackSingle>()
init
	EventListener.onPointCast(SPELL_ID) (caster, tpos) ->
		flashEffect(SPELL_EFFECT_PATH, tpos)
		doAfter(SPELL_EFFECT_DURATION) ->
			ClearTextMessages()
			forUnitsInRange(tpos, SPELL_RADIUS) u ->
				if u != caster // Only execute damage and debuff if the target is not the same unit
					print("Unit is not caster")
					if u.hasAbility(buffId)
						caster.damageTarget(u, BONUS_DAMAGE)
						flashEffect(BONUS_EFFECT_PATH, tpos)
					print("Unit had Conflagration buff : " + u.hasAbility(buffId).toString())
					caster.damageTarget(u, BASE_DAMAGE)
					u.addAbility(buffId)
					if buffMap.has(u)
						destroy buffMap.get(u)
					let cb = doAfter(BUFF_DURATION) ->
						if buffMap.has(u)
							buffMap.remove(u)
							u.removeAbility(buffId)
					buffMap.put(u, cb)
				else  // Keep the player from damaging themselves and let them know they cannot target themselves, also test errors
					error("Cannot target yourself")